<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>mycollab-app-community</name>
    <artifactId>mycollab-app-community</artifactId>
    <parent>
        <groupId>com.mycollab</groupId>
        <artifactId>mycollab-parent-community</artifactId>
        <version>7.0.0</version>
        <relativePath>../mycollab-parent-community/pom.xml</relativePath>
    </parent>
    <packaging>jar</packaging>
    <properties>
        <dockerfile-maven-plugin.version>1.4.0</dockerfile-maven-plugin.version>
        <installer.staging.dir>${project.build.directory}/staging</installer.staging.dir>
        <installer.resource.dir.app>${basedir}/src/main/installer-resources</installer.resource.dir.app>
        <staging.dir.app>${installer.staging.dir}</staging.dir.app>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.mycollab</groupId>
            <artifactId>mycollab-migration</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--
        <dependency>
            <groupId>com.mycollab</groupId>
            <artifactId>mycollab-mobile</artifactId>
            <version>${project.version}</version>
        </dependency>
        -->

        <dependency>
            <groupId>com.mycollab</groupId>
            <artifactId>mycollab-server-runner</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.mycollab</groupId>
                    <artifactId>mycollab-test</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.mycollab</groupId>
            <artifactId>mycollab-servlet</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.mycollab</groupId>
            <artifactId>mycollab-services-community</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.mycollab</groupId>
            <artifactId>mycollab-scheduler-community</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.mycollab</groupId>
            <artifactId>mycollab-web-community</artifactId>
            <version>${project.version}</version>
        </dependency>
<!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.validation</groupId>
                    <artifactId>validation-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
-->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-compatibility-client</artifactId>
            <scope>provided</scope>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <!-- Clean up also any pre-compiled themes -->
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/themes</directory>
                            <includes>
                                <include>**/styles.css</include>
                                <include>**/styles.scss.cache</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/classes</outputDirectory>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>#</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>config/*.yml</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>config/*.yml</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docker-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker/</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>**/*.yml</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>update-theme</goal>
                            <goal>update-widgetset</goal>
                            <goal>compile</goal>
                            <!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
                            <goal>compile-theme</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>com.mycollab.server.DefaultServerRunner</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <excludeTransitive>false</excludeTransitive>
                    <useBaseVersion>true</useBaseVersion>
                    <stripVersion>false</stripVersion>
                    <overWriteReleases>true</overWriteReleases>
                    <overWriteSnapshots>true</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                </configuration>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.mycollab</groupId>
                                    <artifactId>mycollab-esb</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <includes>*.ftl</includes>
                                    <outputDirectory>${project.build.directory}/staging/i18n</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.mycollab</groupId>
                                    <artifactId>mycollab-localization</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <includes>*.properties</includes>
                                    <excludes>**/pom.properties</excludes>
                                    <outputDirectory>${project.build.directory}/staging/i18n</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.mycollab</groupId>
                                    <artifactId>mycollab-scheduler</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <includes>*.ftl</includes>
                                    <outputDirectory>${project.build.directory}/staging/i18n</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.mycollab</groupId>
                                    <artifactId>mycollab-servlet</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <includes>*.ftl</includes>
                                    <outputDirectory>${project.build.directory}/staging/i18n</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- copy *application* jars to izpack staging lib -->
                        <id>copy-product-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${installer.staging.dir}/lib</outputDirectory>
                            <excludeScope>provided</excludeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>prepare-installer</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy file="${project.build.directory}/mycollab-app-community-${project.version}.jar"
                                      tofile="${installer.staging.dir}/lib/mycollab-app-community-${project.version}.jar"/>
                                <copy todir="${installer.staging.dir}">
                                    <fileset dir="${installer.resource.dir.app}"/>
                                </copy>
                                <copy todir="${installer.staging.dir}/config">
                                    <fileset dir="${basedir}/src/main/config">
                                        <exclude name="application.properties"/>
                                    </fileset>
                                </copy>
                                <copy todir="${installer.staging.dir}/logs">
                                    <fileset dir="${basedir}/src/main/logs"/>
                                </copy>
                                <copy todir="${installer.staging.dir}/bin">
                                    <fileset dir="${basedir}/src/main/scripts"/>
                                </copy>
                                <copy todir="${installer.staging.dir}/lib">
                                    <fileset dir="${basedir}/src/main/lib"/>
                                </copy>
                                <chmod dir="${installer.staging.dir}/bin/" includes="*.sh" perm="700"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/src.xml</descriptor>
                    </descriptors>
                    <finalName>MyCollab-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <!--
                            <goal>push</goal>
                            -->
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>mycollab/mycollab</repository>
                    <tag>latest</tag>
                    <contextDirectory>${project.build.directory}</contextDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
